% aws, common

$ current_profile: echo "$AWS_PROFILE"
$ current_region: echo "$AWS_REGION"

$ account: aws sts get-caller-identity --query 'Account' --output text
$ account_alias: aws iam list-account-aliases --query 'AccountAliases' --output text
$ arn: aws sts get-caller-identity --output text --query 'Arn'
$ profile: aws configure list-profiles | sort
$ profile_region: aws configure get region --profile $profile --- --fzf-overrides '--no-select-1'
$ region: curl -fsSL https://raw.githubusercontent.com/boto/botocore/develop/botocore/data/endpoints.json | jq -r '.partitions[0].regions | keys | sort[]'
$ user_id: aws sts get-caller-identity --output text --query 'UserId'

% aws
@ aws, common

# Show CLI example
bat --theme=DarkNeon <example>

$ example: fd -g '*.rst' /opt/homebrew/share/awscli/examples ~/.local/opt/awscli/v2/current/dist/awscli/examples | sort --- --preview 'bat -fn --theme=DarkNeon {}'

# Set the region
export AWS_REGION=<region>

# List configured profiles
aws configure list-profiles

# List available regions
aws account list-regions --output json

# whoami
aws sts get-caller-identity --output json

# Open a bookmarked URL in a profile tab
assume <profile> --region <profile_region> --cd <bookmark>

$ bookmark: mlr --c2p cat ~/.aws/bookmarks.csv --- --headers 1 --column 1 --delimiter '\s+' --fzf-overrides '--no-select-1'

% aws, ec2

$ instance_id: aws ec2 describe-instances --query 'Reservations[].Instances[].{InstanceId: InstanceId, Name: Tags[?Key==`Name`]|[0].Value}' --output json | mlr --j2p cat --- --headers 1 --column 1 --delimiter '\s+'

# Start a session on an EC2 instance
aws ssm start-session --target <instance_id>

# EC2 instance ids by name
aws ec2 describe-instances --filters 'Name=tag:Name,Values=<name>' --query 'Reservations[].Instances[].[InstanceId]' --output text

# Describe an instance
aws ec2 describe-instances --instance-id <instance_id>

# List tags for an EC2 instance
aws ec2 describe-tags --filters 'Name=resource-id,Values=<instance_id>'

# Find a security group by name
aws ec2 describe-security-groups --filters 'Name=tag:Name,Values=<name>'

# Count network interface types
aws ec2 describe-network-interfaces --query 'NetworkInterfaces[].[InterfaceType]' --output text | sort | uniq -c | sort -n

% aws, s3

# List buckets containing a string
aws s3api list-buckets --query "Buckets[?contains(Name, '<name>')].[Name]" --output text | sort | less

% aws, ssm

# Get parameter
aws ssm get-parameter --name '<name>' --with-decryption --query 'Parameters[0].Value' --output text

# Set parameter
aws ssm put-parameter --name '<name>' --value '<value>' --type '<type>'

$ type: printf 'String\nStringList\nSecureString\n'

# Search for parameter
aws ssm describe-parameters --parameter-filters 'Key=Name,Option=Contains,Values=<search>' --query 'Parameters[*].[Name]' --output text
